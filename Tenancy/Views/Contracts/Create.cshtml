@model Tenancy.Models.Contract

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contract</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Lessee_ID, "Lessee_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- Html.DropDownListFor(model => model.Lessee_ID, ViewBag.Lessee_ID as SelectList, htmlAttributes: new { class = "form-control", onChange = "SelectedValue(this)" })-->
                @Html.DropDownListFor(model => model.Lessee_ID, ViewBag.Lessee_ID as SelectList, htmlAttributes: new { @class = "form-control",@onChange = "SelectedValue(this)" })
                @Html.ValidationMessageFor(model => model.Lessee_ID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.СommercialPremises_Code, "СommercialPremises_Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model=>model.СommercialPremises_Code, ViewBag.СommercialPremises_Code as SelectList, htmlAttributes: new { @class = "form-control" })
                <!--<input type="text" name="СommercialPremises_Code" value="ViewBag.selectedValue" class="form-control" />-->

                @Html.ValidationMessageFor(model => model.СommercialPremises_Code, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.FileNameContract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileNameContract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileNameContract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileDataContract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileDataContract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileDataContract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileNameLessee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileNameLessee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileNameLessee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileDataLessee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileDataLessee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileDataLessee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AvialableContracts")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script>

    //To get selected value an text of dropdownlist
    function SelectedValue(ddlObject) {
        //Selected value of dropdownlist
        var selectedValue = ddlObject.value;
        @ViewBag.СommercialPremises_Code = selectedValue;
        //Selected text of dropdownlist
        var selectedText = ddlObject.options[ddlObject.selectedIndex].innerHTML;

        //alert popup with detail of seleceted value and text
        //alert(" Selected Value: " + selectedValue + " -- " + "Selected Text: " + selectedText);
    }
</script>
